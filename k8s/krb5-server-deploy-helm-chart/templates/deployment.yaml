apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
spec:
  replicas: 1
  selector:
    matchLabels: 
      deploymentconfig: krb5-server
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        deploymentconfig: {{ .Values.name }}
    spec:
      containers:
      - env:
        - name: RUN_MODE
          value: kadmin
        - name: KRB5_KDC
          value: {{ .Values.name }}
        - name: KRB5_REALM
          value: {{ .Values.krb5Realm }}
        image: {{ .Values.image }}
        imagePullPolicy: IfNotPresent
        name: kadmin
        ports:
        - containerPort: 8888
          protocol: TCP
        - containerPort: 8888
          protocol: UDP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /dev/shm
          name: share
      - env:
        - name: RUN_MODE
          value: kdc
        - name: KRB5_KDC
          value: {{ .Values.name }}
        - name: KRB5_REALM
          value: {{ .Values.krb5Realm }}
        image: {{ .Values.image }}
        imagePullPolicy: IfNotPresent
        name: kdc
        ports:
        - containerPort: 8749
          protocol: TCP
        - containerPort: 8749
          protocol: UDP
        - containerPort: 8464
          protocol: UDP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /dev/shm
          name: share
        #- mountPath: /var/lib/krb5kdc
        #  name: kdc-config
        - mountPath: /etc/krb5.conf.d
          name: krb5-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir:
          medium: Memory
        name: share
      - emptyDir: {}
        name: kdc-config
      - emptyDir: {}
        name: krb5-config
